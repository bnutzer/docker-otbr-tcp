name: Build and Push Docker Image

on:
  # Manual trigger
  workflow_dispatch:

  # Weekly builds every Monday at 6 AM UTC
  schedule:
    - cron: '0 6 * * 1'

  # Build on pushes to main branch
  push:
    branches:
      - main
    paths-ignore:
      - 'README*.md'
      - 'CLAUDE.md'
      - '.gitignore'

  # Build on releases
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_NAME: bnutzer/otbr-tcp

jobs:
  build:
    runs-on: debian-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Generate tags and labels
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          # Date-based tag for scheduled and manual builds
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
          # Latest tag
          type=raw,value=latest,enable={{is_default_branch}}
          # Release tags
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Create git tag (for scheduled builds)
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG=$(date +%Y%m%d)
        if ! git tag -l | grep -q "^$TAG$"; then
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Automated release $TAG"
          git push origin "$TAG"
        fi
